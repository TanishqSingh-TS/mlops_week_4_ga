# .github/workflows/ci.yml

name: MLOps Model CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main
permissions:
    contents: write
    pull-requests: write

jobs:
  test-and-validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
    
      - name: Setup CML (Continuous Machine Learning)
        uses: iterative/setup-cml@v2.0.1
        

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scikit-learn pandas numpy pytest joblib dvc dvc-gs
          pip install dvc[gcs]
        
      - name: Google Cloud Authentication
        id: 'auth'
        uses: 'google-github-actions/auth@v3'
        with:
          credentials_json: '${{ secrets.GCP_SA }}'
    
      - name: Pulling Data & Model using DVC
        run: |
          dvc pull

      - name: Run Tests
        run: |
          pytest -v &> output.txt 

      - name: Model Evaluation
        run: |
          mkdir artifact_metrics
          python3 check_metrics.py
      
      - name: Create cml report
        run: |
          # --- 1. Create the base report content ---
          echo "# CML Test & Evaluation Report" > report.md
          
          # --- 2. Section 1: Pytest Results ---
          echo "## Pytest Sanity Check" >> report.md
          # Check if output.txt exists before trying to cat it
          if [ -f output.txt ]; then
            echo "\`\`\`" >> report.md
            cat output.txt >> report.md
            echo "\`\`\`" >> report.md
          else
            echo "Pytest output file (output.txt) not found." >> report.md
          fi
          
          # --- Section 2: Text Classification Report ---
          echo "## Classification Report" >> report.md
          echo "\`\`\`text" >> report.md # Start a 'text' code block
          cat ./artifact_metrics/classification_report.txt >> report.md # Inject the report file
          echo "\`\`\`" >> report.md

                
          ## Section 3: Confusion Matrix Visualization
          echo "" >> report.md
          echo "### Confusion Matrix" >> report.md
          echo "![](./artifact_metrics/confusion_matrix.png)" >> report.md
          
          # Post the entire report.md content as a comment
          cml comment create report.md
        
        
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}